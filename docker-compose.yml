  version: "3.8"
 

  services:
    app:
        build: ./packages/backend
        ports:
          - "8080:8080"
        depends_on:
          subtitler:
            condition: service_healthy
          rabbitmq:
            condition: service_started
          database:
            condition: service_started
        networks:
          - network-app
        volumes:
          - /home/anurag/s3mnt:/home/anurag/s3mnt/:rw
        restart: always


        
    rabbitmq:
      image: rabbitmq:3.13-management
      ports:
        - "5672:5672"
        - "15672:15672"
      networks:
        - network-app
      healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 5s
        timeout: 5s
        retries: 5
      
    database:
      image: postgres:latest
      ports:
        - "5432:5432"
      networks:
        - network-app
      environment:
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=streamvault
      volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    subtitler:
      build: ./packages/subtitler
      ports:
        - "5000:5000"
     
      networks:
        - network-app
      volumes:
        - /home/anurag/s3mnt:/home/anurag/s3mnt/:rw
      depends_on:
        rabbitmq:
          condition: service_healthy
      restart: always
      healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
          interval: 5s
          timeout: 5s
          retries: 5

    # webserver:
    #   image: nginx:latest
    #   ports:
    #     - 80:80
    #     - 443:443
    #   restart: always
    #   volumes:
    #     - /home/anurag/nginx/conf/:/etc/nginx/conf.d/:rw
    #     - /home/anurag/certbot/www:/var/www/certbot/:rw
    #     - /home/anurag/certbot/conf/:/etc/nginx/ssl/:rw
    # certbot:
    #   image: certbot/certbot:latest
    #   volumes:
    #     - ./certbot/www/:/var/www/certbot/:rw
    #     - ./certbot/conf/:/etc/letsencrypt/:rw

  

      

  networks:
    network-app:
    


    
